AWSTemplateFormatVersion: 2010-09-09

Parameters:
  AppName:
    Type: String
    Default: cf-deploy-cross-account
  DeployAccountId:
    Type: String
  AddBucketPolicy:
    Type: String

Conditions:
  AddBucketPolicy: !Equals [ !Ref AddBucketPolicy, 'true' ]

Resources:
  ######################################################################################################################
  # Cross Account Resources
  # - KMS key for cross account access
  # - S3 bucket policy granting cross account access
  ######################################################################################################################
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          # Allow Tool Account to manage KMS key
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          # Allow Deploy Account to us KMS key
          - Sid: Allow use of the key for CryptoGraphy Lambda
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DeployAccountId}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
              - kms:CreateGrant
            Resource: "*"
  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/crossaccount
      TargetKeyId: !Ref KMSKey
  # Allow Deploy account to access S3 bucket to retrieve code artifact
  ArtifactBucketPolicy:
    Condition: AddBucketPolicy
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${ArtifactBucket}
              - !Sub arn:aws:s3:::${ArtifactBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${DeployAccountId}:role/deployer
  ######################################################################################################################
  # CodeCommit repository
  ######################################################################################################################
  MyRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref AppName

  ######################################################################################################################
  # CodeBuild role
  ######################################################################################################################
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - cloudformation:*
                  - iam:*
                  - lambda:*
                  - ssm:*
                  - apigateway:*
                  - codepipeline:*
                  - codebuild:*
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion

  ######################################################################################################################
  # CodePipeline role
  ######################################################################################################################
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:*
                  - lambda:*
                  - ssm:*
                  - apigateway:*
                  - codepipeline:*
                  - codebuild:*
                  - sts:AssumeRole # permission for assuming roles, roles to be assumed should grant AssumeRolePolicyDocument to this role/account
                  - codecommit:*

  ######################################################################################################################
  # S3 artifact bucket
  ######################################################################################################################
  ArtifactBucket:
    Type: AWS::S3::Bucket

  ######################################################################################################################
  # CodeBuild
  ######################################################################################################################
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        Type: LINUX_CONTAINER
        # This variables will be used by buildspec.yaml file
        EnvironmentVariables:
          - Name: S3Bucket
            Value: !Ref ArtifactBucket
          - Name: APP_NAME
            Value: !Ref AppName
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  #####################################################################################################################
  # CodePipeline
  #####################################################################################################################
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: !GetAtt MyRepo.Name
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt MyRepo.Name
                BranchName: master
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        ################################################################################################################
        # Deployment composed by two sequential:
        #   1. step create change set
        #   3. execute change set
        # Making possible to put a manual approval step to check actions that will be performed by CF on the change set
        ################################################################################################################
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ChangeSetName: update
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref AppName
                RoleArn: !Sub arn:aws:iam::${DeployAccountId}:role/deployer
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::package.yaml
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            - Name: DeployChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ChangeSetName: update
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref AppName
                RoleArn: !Sub arn:aws:iam::${DeployAccountId}:role/deployer
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
  ArtifactBucketName:
    Value: !Ref ArtifactBucket
  KMSArn:
    Value: !GetAtt KMSKey.Arn